/*
 * This file is part of RadPlanBio
 *
 * Copyright (C) 2013-2015 Tomas Skripcak
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.dktk.dd.rpb.core.dao.support;

import java.io.Serializable;

import javax.persistence.metamodel.SingularAttribute;
import org.apache.commons.lang.Validate;

import de.dktk.dd.rpb.core.domain.Identifiable;

/**
 * Holder class for search ordering used by the {@link SearchParameters}.
 * When used with {@link NamedQueryUtil}, you pass column name. For other usage, pass the property name
 *
 * @author initial source code generated by Celerio, a Jaxio product
 * @since 01 Apr 2013
 */
public class OrderBy implements Serializable {

    //region Finals

    private static final long serialVersionUID = 1L;

    //endregion

    //region Members

    private String columnOrProperty;
    private OrderByDirection direction = OrderByDirection.ASC;

    //endregion

    //region Properties

    public String getColumn() {
        return this.columnOrProperty;
    }

    public String getProperty() {
        return this.columnOrProperty;
    }

    @SuppressWarnings("unused")
    public OrderByDirection getDirection() {
        return this.direction;
    }

    public boolean isOrderDesc() {
        return this.direction == OrderByDirection.DESC;
    }

    //endregion

    //region Constructors

    public OrderBy(String columnOrProperty, OrderByDirection direction) {
        Validate.notNull(columnOrProperty);
        Validate.notNull(direction);
        this.columnOrProperty = columnOrProperty;
        this.direction = direction;
    }

    public OrderBy(String columnOrProperty) {
        this(columnOrProperty, OrderByDirection.ASC);
    }

    public OrderBy(SingularAttribute<? extends Identifiable<? extends Serializable>, ? extends Serializable> attribute, OrderByDirection direction) {
        Validate.notNull(attribute);
        Validate.notNull(direction);
        this.columnOrProperty = attribute.getName();
        this.direction = direction;
    }

    @SuppressWarnings("unused")
    public OrderBy(SingularAttribute<? extends Identifiable<? extends Serializable>, ? extends Serializable> attribute) {
        this(attribute, OrderByDirection.ASC);
    }

    //endregion

}